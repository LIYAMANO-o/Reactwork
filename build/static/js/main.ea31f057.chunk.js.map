{"version":3,"sources":["pages/Hoc.js","pages/context.js","components/List.js","components/Input.js","pages/TodoList.js","index.js"],"names":["withFetch","Com","url","Topic","state","data","fetch","then","res","json","setState","this","props","Component","displayName","name","dangerouslySetInnerHTML","__html","content","console","log","map","item","title","React","createContext","List","arr1","todos","filter","done","length","renderTodos","Input","htmlFor","id","value","inpValue","type","onChange","handleChange","onClick","addTodo","Control","e","target","deleteTodo","idx","index","localStorage","setItem","JSON","stringify","toggle","newTodos","parse","todo","checked","getItem","className","ReactDOM","render","TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.ea31f057.chunk.js","sourcesContent":["//const { Component } = require(\"react\")\r\nimport React,{Component} from 'react'\r\n//higher order Component\r\n\r\n\r\nconst withFetch=(Com,url)=>{\r\n     class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state={\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com {...this.props} data={this.state.data}/>\r\n        }\r\n    \r\n        \r\n    }\r\n    Topic.displayName=`withFetch(${Com.name})`\r\n    return Topic;\r\n    }\r\n \r\n   \r\n\r\n\r\n const De=(props)=> {\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state={\r\n    //         data:''\r\n    //     }\r\n    // }\r\n    // componentDidMount(){\r\n    //     fetch('https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312')\r\n    //     .then(res=>res.json())\r\n    //     .then(res=>this.setState({data:res.data.content}))\r\n    // }\r\n    // render(){\r\n        return <div>\r\n            <h1>标题{props.name}</h1>\r\n            <div dangerouslySetInnerHTML={{__html:props.data.content}}></div>\r\n        </div>\r\n    //}\r\n}\r\n\r\nexport const Detail=withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\n\r\nconst Ho =(props)=>{\r\n    console.log(props.data);\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\n\r\nconst Hoc=withFetch(Ho,'https://cnodejs.org/api/v1/topics');\r\n\r\n\r\n\r\n// class Hoc extends Component{\r\n//     // constructor(){\r\n//     //     super();\r\n//     //     this.state={\r\n//     //         data:[]\r\n//     //     }\r\n//     // }\r\n//     // componentDidMount(){\r\n//     //     fetch('https://cnodejs.org/api/v1/topics')\r\n//     //     .then(res=>res.json())\r\n//     //     .then(res=>this.setState({data:res.data}))\r\n//     // }\r\n//     render(){\r\n//        // console.log(this.state.data);\r\n//         return(\r\n//             <div>\r\n//                 Hoc\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Hoc;","import React from 'react';\r\n\r\nconst Context= React.createContext();\r\n\r\n\r\nexport default Context;\r\n","import React, { Component } from 'react'\r\n\r\n class List extends Component {\r\n    render() {\r\n        let arr1=this.props.todos.filter((item)=>!item.done)\r\n        return (\r\n            <div>\r\n                 <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                   {this.props.renderTodos(false)}    \r\n                </ul>\r\n                    <h2>已经完成</h2>\r\n                    <ul>\r\n                    {this.props.renderTodos(true)}\r\n                    </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react'\r\n\r\nclass Input extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todoList</label>\r\n                <input\r\n                id='inp'\r\n                //ref={inp=>this.input=inp}\r\n                value={this.props.inpValue} \r\n                type=\"text\"\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;\r\n\r\n","import React,{Component} from 'react';\r\nimport List from '../components/List';\r\nimport Input from '../components/Input';\r\n\r\nclass Control extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[]\r\n\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n     this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos=localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\naddTodo=(todos)=>{\r\n\r\n//添加若为空则不添加\r\n    if(this.state.inpValue==''){\r\n        return;\r\n    }\r\nthis.setState({\r\n    todos:[\r\n        {\r\n            title:this.state.inpValue,\r\n            done:false\r\n        },\r\n    ...this.state.todos\r\n        ]\r\n    })\r\n\r\n    this.setState({inpValue:''})\r\n}\r\ndeleteTodo=(idx)=>{\r\nthis.setState({\r\n    todos:this.state.todos.filter((item,index)=>index!=idx)\r\n});\r\nlocalStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    \r\n}\r\ntoggle=(index)=>{\r\n    let newTodos=JSON.parse(JSON.stringify(this.state.todos))\r\n    newTodos[index].done=!newTodos[index].done;\r\n   \r\n       this.setState({\r\n       \r\n        todos:newTodos\r\n    }) \r\n    }\r\n renderTodos=(done)=>{\r\n            return  this.state.todos.map((todo,idx)=>{\r\n                if(done==todo.done){\r\n                 return  <li>\r\n                     <input \r\n                     onClick={()=>this.toggle(idx)}\r\n                     checked={done}\r\n                     type=\"checkbox\"/>\r\n\r\n\r\n                     <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                     <button onClick={()=>this.deleteTodo(idx)}>删除</button>\r\n                         </li>              \r\n                }\r\n            })\r\n\r\n        }\r\n    \r\n    render(){\r\n        const {todos,inpValue}=this.state;\r\n       return (\r\n        <div className=\"box\">\r\n         <Input inpValue={inpValue} addTodo={this.addTodo} handleChange={this.handleChange}/>\r\n         <List todos={todos} renderTodos={this.renderTodos}/>\r\n       </div>\r\n       )\r\n    }\r\n\r\n}\r\nexport default Control;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Home from './pages/Home';\n// import Control from './components/Control';\n// import demo from './pages/Demo01';\n// import App from './pages/App'\nimport Hoc,{Detail} from './pages/Hoc';\nimport  Hook from './pages/Hook';\nimport Context from './pages/context';\nimport TodoList from './pages/TodoList';\nReactDOM.render(\n    <TodoList/>,\n  document.getElementById('root')\n)\n\n\n\n\n\n\n\n{/* //import $ from 'jquery';\n//import * as serviceWorker from './serviceWorker';\n// let ele=<h1>hello react</h1>\n\n// let ele=React.createElement(\n//   'h1',\n//   {id:'title'},\n//   'hello react'\n//   );\n\n  //  let ele=React.createElement(\n  //    'h1',\n  //    {id:'title'},\n  //    React.createElement('div',{},'hello'),\n  //    'react'\n  //  ) */}\n\n\n  //组件声明\n  //函数组件\n  //UI(展示)组件，木偶组件\n// function App(props){\n//   const{title,id}=props;\n//   return <div>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n//智能组件\n//类组件\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       name:new Date().toLocaleString()\n//     }\n//      setTimeout(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//  },1000)\n//   }\n//   render(){\n//     return <div>\n//      <div>name:{this.state.name}</div>\n//       <App title= {this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo title='任意值' id='app'/>,\n//   document.getElementById('root')\n// );\n\n//   setInterval(()=>{\n//     let ele=<h1 id='title' className='tit'>\n//       <div>当前时间</div>\n//       {new Date().toLocaleDateString()}\n//       </h1>;\n//       ReactDOM.render(\n\n//    ele,\n//   document.getElementById('root')\n// );\n//   },1000)\n  \n\n \n\n\n// let ReactDOM={\n//   render(eleObj,container){\n//     //解构\n//       const{type,props}=eleObj;\n//       //创建第一层节点\n//       let ele=document.createElement(type);\n//       //遍历属性对象，将属性添加到第一层节点对象上\n//        for(const prop in props){\n//         if(prop=='children'){\n//           if(typeof props.children=='string'){\n//             const txtNode=document.createTextNode(props[prop]);\n//             ele.appendChild(txtNode);\n//             break;\n//           }\n//           // ele.setAttribute('class',props[prop]);\n//           //将第一层节点对象的子元素添加进去\n//           props.children.forEach(child => {\n//             if(typeof child=='string'){\n//               const txtNode=document.createTextNode(child);\n//               ele.appendChild(txtNode);\n//             }else{\n//               ReactDOM.render(child,ele);\n//             }\n//           });\n//         }else{\n//           ele[prop]=props[prop];\n//         }\n//       }\n//       //将第一层DOM节点添加到container中\n//      container.appendChild(ele);\n     \n//   }\n// }\n\n// let List=(props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// const Buttons=()=>{\n//   const btns=[1,2,3,4,5];\n//   const handleClick=(num)=>{\n//     //事件对象\n//     console.log(num);\n//   }\n//   return <div>\n//     {\n//       btns.map(\n//         (item)=>(\n//           <button\n//            key={item}\n//            onClick={()=>this.getData(item)}\n//           //  onClick={()=>handleClick(item)}\n//            >\n//              {item}\n//              </button>\n//              )\n//         )\n        \n//     }\n//   </div>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);                       \n//     this.state={\n//       data:[]\n//     }\n//   }\n//   componentDidMount(){\n//      fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       this.setState({data})\n//     })\n\n//   }\n//   // handleClick=()=>{\n//   //   console.log(this)\n//   // }\n\n\n\n// getData=(page)=>{\n//   fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//   .then(res=>res.json())\n//   .then(({data})=>{\n//       this.setState({data})\n//     })\n \n// }\n//   render(){\n//     console.log('render');\n//     const {data}=this.state;\n//     // return <ul>\n//     //  {\n//     //   data.map((item)=><li>{item.title}</li>)\n//     //  }\n//     // </ul>\n// const btns=[1,2,3,4,5];\n    \n//     return <div>\n//      {\n//        btns.map(\n//          (item)=>(\n//            <button\n//            key={item}\n//            onClick={()=>this.getData(item)}\n//            >\n//              {item}\n//            </button>\n//          )\n//        )\n//      }\n//        <List data={data}/>\n//     </div>\n    \n//   }\n\n// }\n\n\n\n\n\n\n\n\n\n// 1.原生JS，DOM操作(JQ)\n//2.react开发效率高、性能高\n//3.环境搭建，创建一个项目、运行\n//4.JSX语法\n\n\n\n"],"sourceRoot":""}